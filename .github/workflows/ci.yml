name: CI

on:
  pull_request:
    paths-ignore:
      - '**.adoc'
  push:
    branches:
      - main
    paths-ignore:
      - '**.adoc'

jobs:
  build:
    name: Build all actions
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        if: ${{ !env.ACT }}
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Check formatting
        run: yarn run format-check

      - name: ESLint
        run: yarn run lint

      - name: Build
        run: yarn run build

      - name: Package
        run: yarn run package

      - name: Check if */dist/ updated
        id: git-dirty
        run: echo "::set-output name=dirty::$([[ "$(git status --porcelain)" != "" ]] && echo true || echo false)"

      - name: Configure git user
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Add */dist/ files and commit
        if: ${{ steps.git-dirty.outputs.dirty }}
        run: |
          git add */dist/*
          git commit -m "chore(dist): Update */dist/ files"

      - name: Push changes to ${{ github.ref }}
        if: ${{ steps.git-dirty.outputs.dirty && !env.ACT }}
        run: git push origin ${{ github.ref }}

      - name: Verify no uncommitted files left
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            echo ----------------------------------------
            echo git status
            echo ----------------------------------------
            git status
            echo ----------------------------------------
            echo git diff
            echo ----------------------------------------
            git diff
            echo ----------------------------------------
            echo Troubleshooting
            echo ----------------------------------------
            echo "::error::Unstaged changes detected. Locally try running: git clean -ffdx && npm ci && npm run pre-checkin"
            exit 1
          fi

  test-find-prs:
    name: Test find-prs action
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v2

      - uses: ./find-prs
        id: find-prs
        with:
          commit-sha: ${{ github.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Action output
        run: echo '${{ steps.find-prs.outputs.prs }}' | jq .

  test-nexus:
    name: Test nexus aciton
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - uses: actions/checkout@v2

      - uses: ./nexus
        id: nexus
        with:
          base-url: https://nexus.example.com
          repos: |
            [ {
              "id": "nexus",
              "repo": "public",
              "auth": true,
              "releases": {"enabled": true, "checksumPolicy": "warn"},
              "snapshots": {"enabled": true, "checksumPolicy": "warn"}
            }, {
              "id": "nexus-thirdparty",
              "repo": "thirdparty",
              "auth": true,
              "releases": {"enabled": true, "checksumPolicy": "warn"},
              "snapshots": {"enabled": false}
            } ]
          plugin-repos: |
            [ {
              "id": "nexus",
              "repo": "public",
              "auth": true,
              "releases": {"enabled": true, "checksumPolicy": "warn"},
              "snapshots": {"enabled": false}
            } ]
      - name: Action output
        run: cat ~/.m2/settings.xml
